package com.customer.com.decos.services;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import jakarta.xml.ws.WebEndpoint;
import jakarta.xml.ws.WebServiceClient;
import jakarta.xml.ws.WebServiceFeature;
import jakarta.xml.ws.Service;

/**
 * This class was generated by Apache CXF 4.0.0
 * 2024-01-24T09:33:01.688-04:00
 * Generated source version: 4.0.0
 *
 */
@WebServiceClient(name = "BasicHttpEntityService",
                  wsdlLocation = "file:/Users/enunez/Projects/com/ictual/join-integrator-client/src/main/resources/wsdl/DecosConnect.wsdl",
                  targetNamespace = "www.decos.com/services")
public class BasicHttpEntityService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("www.decos.com/services", "BasicHttpEntityService");
    public final static QName BasicHttpBindingIBasicHttpEntityService = new QName("www.decos.com/services", "BasicHttpBinding_IBasicHttpEntityService");
    static {
        URL url = null;
        try {
            url = new URL("file:/Users/enunez/Projects/com/ictual/join-integrator-client/src/main/resources/wsdl/DecosConnect.wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(BasicHttpEntityService.class.getName())
                .log(java.util.logging.Level.INFO,
                     "Can not initialize the default wsdl from {0}", "file:/Users/enunez/Projects/com/ictual/join-integrator-client/src/main/resources/wsdl/DecosConnect.wsdl");
        }
        WSDL_LOCATION = url;
    }

    public BasicHttpEntityService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public BasicHttpEntityService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public BasicHttpEntityService() {
        super(WSDL_LOCATION, SERVICE);
    }

    public BasicHttpEntityService(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public BasicHttpEntityService(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public BasicHttpEntityService(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }




    /**
     *
     * @return
     *     returns IBasicHttpEntityService
     */
    @WebEndpoint(name = "BasicHttpBinding_IBasicHttpEntityService")
    public IBasicHttpEntityService getBasicHttpBindingIBasicHttpEntityService() {
        return super.getPort(BasicHttpBindingIBasicHttpEntityService, IBasicHttpEntityService.class);
    }

    /**
     *
     * @param features
     *     A list of {@link WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns IBasicHttpEntityService
     */
    @WebEndpoint(name = "BasicHttpBinding_IBasicHttpEntityService")
    public IBasicHttpEntityService getBasicHttpBindingIBasicHttpEntityService(WebServiceFeature... features) {
        return super.getPort(BasicHttpBindingIBasicHttpEntityService, IBasicHttpEntityService.class, features);
    }

}
